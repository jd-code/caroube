dnl 
dnl $Id$
dnl Caroube Copyright (C) 2002 Cristelle Barillon, Jean-Daniel PAUGET
dnl A whole set of bouncing balls.
dnl 
dnl caroube@disjunkt.com  -  http://caroube.disjunkt.com/
dnl 
dnl 
dnl 
dnl 
dnl 
dnl This file is part of Caroube
dnl 
dnl Caroube is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl 
dnl Caroube is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with Caroube; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
dnl 
dnl you can also try the web at http://www.gnu.org/
dnl 
dnl
dnl caroube@disjunkt.com  -  http://caroube.disjunkt.com/

dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/audio.cpp)

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl autoheader
AM_CONFIG_HEADER(src/config.h)

dnl Setup for automake
AM_INIT_AUTOMAKE(caroube, 0.7.0)

# set the libtool so version numbers
lt_major=0
lt_revision=0
lt_age=0

AC_SUBST(lt_major)
AC_SUBST(lt_revision)
AC_SUBST(lt_age)



dnl Check for tools

AC_PROG_CC
AC_PROG_CXX
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

dnl Check for compiler environment

AC_C_CONST

dnl JD's standard minimum CFLAG
dnl	CFLAGS="$CFLAGS -O2 -Wall"
dnl	CXXFLAGS="$CFLAGS -O2 -Wall"
dnl CHANGED for JD's ENterGroup default nasty warnings
CFLAGS="$CFLAGS -O2 -Wall -Wcast-qual -Wwrite-strings"
dnl CXXFLAGS="$CXXFLAGS -O2 -Wall -Woverloaded-virtual -Wcast-qual -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Winline"
dnl CXXFLAGS="$CXXFLAGS -O2 -Wall -Woverloaded-virtual -Wcast-qual -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls"
CXXFLAGS="$CXXFLAGS -O2 -Wall -Woverloaded-virtual -Wcast-qual -Wwrite-strings -Wredundant-decls"

dnl are we compiling for windows -----------------------------------------------------------

dnl first we set the default value
case "$target" in
    *-*-mingw32*)
	defbuildforwin32=yes
	WIN32LDFLAF="-no-undefined -Xlinker --export-all-symbols"
	;;
    *)
	defbuildforwin32=no
	WIN32LDFLAF=""
	;;
esac
AC_SUBST(WIN32LDFLAF)

dnl then we act as eventually required by the configure...
AC_MSG_CHECKING([whether we build for windows])
AC_ARG_ENABLE(build-for-win32,
[  --enable-build-for-win32
                          enables building for a win32 paths repartition],
     try_build_for_win32=$enableval, try_build_for_win32="$defbuildforwin32")
AC_MSG_RESULT($try_build_for_win32)

if test "$try_build_for_win32" = yes; then
    AC_DEFINE(BUILD_FOR_WIN32, 1, we build for a win32 install paths flavour)
fi


dnl Figure out which math library to use

case "$target" in
    *-*-mingw32*)
        MATHLIB=""
        SYS_GL_LIBS="-lopengl32 -lglu32"
        ;;
    *-*-beos*)
        MATHLIB=""
        SYS_GL_LIBS="-lGL"
        ;;
    *-*-linux*)
        MATHLIB="-lm"
        SYS_GL_LIBS="-L/usr/X11R6/lib -lGL"
        ;;
    *)
        MATHLIB="-lm"
        SYS_GL_LIBS="-lGL"
        ;;
esac
AC_SUBST(MATHLIB)


dnl Check for SDL

SDL_VERSION=1.1.0
AM_PATH_SDL($SDL_VERSION,
            :,
	    AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
CFLAGS="$CFLAGS $SDL_CFLAGS"
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"

dnl add our local include dir
ABSSRCDIR=`cd $srcdir && pwd`
CFLAGS="-I"$ABSSRCDIR"/src/include/caroube $CFLAGS"
CXXFLAGS="-I"$ABSSRCDIR"/src/include/caroube $CXXFLAGS"

dnl Check for OpenGL
AC_MSG_CHECKING(for OpenGL support)
have_opengl=no
AC_TRY_COMPILE([
 #include <GL/gl.h>
],[
],[
have_opengl=yes
])
AC_MSG_RESULT($have_opengl)
if test x$have_opengl = xyes; then
    GL_LIBS="$SDL_LIBS $SYS_GL_LIBS"
else
    AC_MSG_ERROR(Unable to find OpenGL headers and libraries)
fi
AC_SUBST(GL_LIBS)
dnl	GLUT_LIBS="$GL_LIBS -lGLU -lglut"
dnl	AC_SUBST(GLUT_LIBS)

# Finally create all the generated files
AC_OUTPUT([
	Makefile
	src/Makefile
	caroube.dox
])

